plugins {
    id 'com.android.application'
    id 'androidx.navigation.safeargs'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}
apply from: '../dependencies.gradle'
android {
    compileSdk versions.compileSdk
    defaultConfig {
        applicationId "com.kindnesswand"
        minSdk versions.minSdk
        targetSdk versions.targetSdk
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

        buildConfigField "Long", "READ_TIMEOUT_SECOND", READ_TIMEOUT_SECOND
        buildConfigField "Long", "CONNECTION_TIMEOUT_SECOND", CONNECTION_TIMEOUT_SECOND

        resValue "string", "google_maps_key", (project.findProperty("GOOGLE_MAPS_API_KEY") ?: "")
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            manifestPlaceholders = [isBranchSdkInTestMode: "true"]
        }
    }

    flavorDimensions "default"

    productFlavors {
        staging {
            versionNameSuffix 'Staging'
            buildConfigField "String", "URL_WEBAPI", "${STAGING_URL_WEBAPI_BASE_URL}"
        }

        production {
            buildConfigField "String", "URL_WEBAPI", "${PRODUCTION_URL_WEBAPI_BASE_URL}"
        }
    }
}

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':spotlight')

    // Androidx Libs
    implementation preDefine.corKtx
    implementation preDefine.appcompat
    implementation preDefine.material
    implementation preDefine.constraintLayout

    //room
    implementation room.roomRuntime
    implementation room.roomKtx
    kapt room.roomKapt

    //koin
    implementation koin.viewmodel

    //coroutines
    implementation coroutines.android
    implementation coroutines.core

    // navigation
    implementation navigation.fragment
    implementation navigation.ui


    //lifecycle
    implementation lifecycle.viewModel
    implementation lifecycle.runtime
    implementation lifecycle.livedata
    kapt lifecycle.kapt

    // retrofit
    implementation retrofit.retrofit
    implementation retrofit.converterGson
    implementation retrofit.okhttp

    //Glide
    implementation glide.glide
    kapt glide.kapt

    // firebase
    implementation firebase.messaging
    implementation firebase.analytics
    implementation firebase.crashlytics

    // Kotpref
    implementation kotpref.kotpref
    implementation kotpref.gson

    //chuck debugger
    debugImplementation chuck.debug
    releaseImplementation chuck.release


    //utils
    implementation utils.imagePicker
    implementation utils.swipedecorator
    implementation utils.timeago
    implementation utils.uploadservice
    implementation utils.flexbox
    implementation utils.persiandate
    implementation utils.legacy
    implementation utils.browser
    implementation utils.zoomable
    implementation utils.indicator
    implementation utils.annotation



//    // kotlin
//    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//    implementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}
